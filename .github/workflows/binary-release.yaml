name: Build and Release Binary

permissions:
  id-token: write
  contents: write

on:
  push:
    branches:
      - main
    paths-ignore:  # Ignore certain paths from triggering the pipeline
      - 'docs/**'
      - 'readme.md'
      - '.gitignore'
#      - '.github/**'
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to use GitVersion
          persist-credentials: true

      # 2: Call our custom `GitVersion action` to tag the repo
      - name: Tag with GitVersion
        id: gitversion
        uses: michielvha/gitversion-tag-action@v3
        with:
          configFilePath: gitversion.yml  # Path to your GitVersion config file

      # 3: Build and release binaries using GoReleaser, maybe move to seperate workflow
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'  # Specify the Go version

      # 4: Cache GoReleaser installation
      - name: Cache GoReleaser
        id: goreleaser-cache
        uses: actions/cache@v3
        with:
          path: ~/.goreleaser
          key: goreleaser-${{ runner.os }}-latest
          restore-keys: goreleaser-${{ runner.os }}-

      # 5: Import PGP Key for signing (if required)
      - name: Import PGP Private Key
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --reload gpg-agent
          echo "${{ secrets.PGP_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format=long
        env:
          GPG_TTY: /dev/null

      # 6: Run GoReleaser to build and release binaries
      # https://github.com/goreleaser/goreleaser-actionw
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
